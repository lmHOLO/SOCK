services:
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
  backend:
    container_name: backend
    build:
      context: ./back/sock
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      - mysql
      - redis

  frontend:
    container_name: frontend
    build:
      context: ./front
    ports:
      - "3000:3000"
    restart: unless-stopped

  mysql:
    container_name: mysql
    build:
      context: ./db
    ports:
      - "3306:3306"
    volumes:
      - /var/lib/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: sock103
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - backend
      - frontend
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"


  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

  fastapi:
    container_name: fastapi
    build:
      context: ./AI
    ports:
      - "9000:9000"
    restart: unless-stopped
    volumes:
      - my-fastapi-volume:/code
    depends_on:
      - mysql

volumes:
  my-fastapi-volume:
    external: true